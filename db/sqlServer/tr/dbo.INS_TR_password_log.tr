
/****** Object:  Trigger [dbo].[INS_TR_password_log]    Script Date: 18/12/2019 12:11:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE TRIGGER [dbo].[INS_TR_password_log]
	ON [dbo].[T_USER]
	FOR INSERT, UPDATE
	AS
	BEGIN
		
	
		DECLARE @g_id_env_key			int
		DECLARE @g_tx_env_name			varchar(256)
	
		DECLARE @g_ct_row				int
		DECLARE @g_id_return_status		int
	
		DECLARE @g_id_error_key			int
		DECLARE @g_tx_err_msg			varchar(1024)
		DECLARE @g_tx_err_msg_tmp		varchar(1024)
	
		IF (	UPDATE(tx_password)
					AND EXISTS	(	SELECT *
									FROM	INSERTED I, DELETED D
									WHERE	I.id_user_key = D.id_user_key
									AND		I.tx_password != D.tx_password
								)
				)
		BEGIN
	
			INSERT	T_PASSWORD_LOG
			SELECT	  GETDATE()
					, I.id_user_key
					, D.tx_password
					, I.tx_password
			FROM	INSERTED 	I
			JOIN 	DELETED 	D 	ON 		I.id_user_key = D.id_user_key
									AND		I.tx_password != D.tx_password
			
	
			SELECT @g_ct_row = @@rowcount, @g_id_error_key = @@error
			SELECT @g_tx_err_msg = 'Error inserting into _log_table_'
			IF (@g_id_error_key != 0 )
			BEGIN
				RAISERROR ('@g_tx_err_msg', 16, 1) WITH SETERROR
				RETURN
			END
		END
	
		
	END


GO

ALTER TABLE [dbo].[T_USER] ENABLE TRIGGER [INS_TR_password_log]
GO
